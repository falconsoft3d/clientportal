version: '3.3'
services:
  django-docker:
    depends_on:
      - pgsql
    image: falconsoft3d/clientportal:latest
    environment:
      DB_HOST: pgsql
      DB_NAME: django-docker
      DB_PASSWORD: x1234567890pass
      DB_USER: postgres
    networks:
     - django-docker_net
     - traefik
    logging:
      driver: json-file
    deploy:
      replicas: 2
      labels:
        traefik.http.routers.django-docker-http.middlewares: django-docker-https-redirect
        traefik.http.routers.django-docker-http.rule: Host(`demo.marlonfalcon.com`)
        traefik.http.routers.django-docker-http.service: django-docker
        traefik.http.routers.django-docker-https.tls.certresolver: letsencrypt
        traefik.http.routers.django-docker-https.entrypoints: https
        traefik.http.routers.django-docker-https.rule: Host(`demo.marlonfalcon.com`)
        swarmpit.service.deployment.autoredeploy: 'true'
        traefik.http.routers.django-docker-https.service: django-docker
        traefik.http.routers.django-docker-http.entrypoints: http
        traefik.http.middlewares.django-docker-https-redirect.redirectscheme.scheme: https
        traefik.enable: 'true'
        traefik.http.services.django-docker.loadbalancer.server.port: '80'
        traefik.http.routers.django-docker-https.tls: 'true'
  pgsql:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: django-docker
      POSTGRES_PASSWORD: x1234567890pass
    ports:
     - 5432:5432
    volumes:
     - django-docker_data:/var/lib/postgresql/data
    networks:
     - django-docker_net
    logging:
      driver: json-file
networks:
  django-docker_net:
    driver: overlay
  django_docker_net:
    driver: overlay
  traefik:
    external: true
volumes:
  django-docker_data:
    driver: local